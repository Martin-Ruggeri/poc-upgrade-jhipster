package com.pae.well.domain;

import com.fasterxml.jackson.annotation.JsonIgnoreProperties;
import java.io.Serializable;
import java.time.ZonedDateTime;
import javax.persistence.*;
import javax.validation.constraints.*;
import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

/**
 * A WellChangeStateExploitation.
 */
@Entity
@Table(name = "well_change_state_exploitation")
@Cache(usage = CacheConcurrencyStrategy.READ_WRITE)
public class WellChangeStateExploitation implements Serializable {

    private static final long serialVersionUID = 1L;

    @Id
    @GeneratedValue(strategy = GenerationType.SEQUENCE, generator = "sequenceGenerator")
    @SequenceGenerator(name = "sequenceGenerator")
    @Column(name = "id")
    private Long id;

    @NotNull
    @Size(max = 2000)
    @Column(name = "justification", length = 2000, nullable = false)
    private String justification;

    @NotNull
    @Column(name = "date", nullable = false)
    private ZonedDateTime date;

    @ManyToOne(optional = false)
    @NotNull
    @JsonIgnoreProperties(
        value = { "saltWaterInjectionPlant", "petroleumPlant", "gasPlant", "project", "rig", "battery", "district", "wellStatus" },
        allowSetters = true
    )
    private Well well;

    @ManyToOne(optional = false)
    @NotNull
    private StateExploitation stateExploitation;

    // jhipster-needle-entity-add-field - JHipster will add fields here

    public Long getId() {
        return this.id;
    }

    public WellChangeStateExploitation id(Long id) {
        this.setId(id);
        return this;
    }

    public void setId(Long id) {
        this.id = id;
    }

    public String getJustification() {
        return this.justification;
    }

    public WellChangeStateExploitation justification(String justification) {
        this.setJustification(justification);
        return this;
    }

    public void setJustification(String justification) {
        this.justification = justification;
    }

    public ZonedDateTime getDate() {
        return this.date;
    }

    public WellChangeStateExploitation date(ZonedDateTime date) {
        this.setDate(date);
        return this;
    }

    public void setDate(ZonedDateTime date) {
        this.date = date;
    }

    public Well getWell() {
        return this.well;
    }

    public void setWell(Well well) {
        this.well = well;
    }

    public WellChangeStateExploitation well(Well well) {
        this.setWell(well);
        return this;
    }

    public StateExploitation getStateExploitation() {
        return this.stateExploitation;
    }

    public void setStateExploitation(StateExploitation stateExploitation) {
        this.stateExploitation = stateExploitation;
    }

    public WellChangeStateExploitation stateExploitation(StateExploitation stateExploitation) {
        this.setStateExploitation(stateExploitation);
        return this;
    }

    // jhipster-needle-entity-add-getters-setters - JHipster will add getters and setters here

    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (!(o instanceof WellChangeStateExploitation)) {
            return false;
        }
        return id != null && id.equals(((WellChangeStateExploitation) o).id);
    }

    @Override
    public int hashCode() {
        // see https://vladmihalcea.com/how-to-implement-equals-and-hashcode-using-the-jpa-entity-identifier/
        return getClass().hashCode();
    }

    // prettier-ignore
    @Override
    public String toString() {
        return "WellChangeStateExploitation{" +
            "id=" + getId() +
            ", justification='" + getJustification() + "'" +
            ", date='" + getDate() + "'" +
            "}";
    }
}
